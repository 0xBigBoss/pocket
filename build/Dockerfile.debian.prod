# Purpose of this container image is to ship pocket binary with minimal dependencies.

ARG TARGET_GOLANG_VERSION=1.18

FROM golang:${TARGET_GOLANG_VERSION}-bullseye AS builder

ENV PROTOC_VERSION 3.19.4
ENV GOLANG_PROTOBUF_VERSION 1.28
ENV MOCKGEN_VERSION 1.6.0
ENV PATH $PATH:$GOPATH/bin

### Install dependencies
# Debian packages
RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential zip wget

# protoc
RUN set -eux; \
    arch="$(dpkg --print-architecture)"; arch="${arch##*-}"; \
    url=; \
    case "$arch" in \
    'amd64') \
    url="https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-x86_64.zip"; \
    ;; \
    'arm64') \
    url="https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/protoc-${PROTOC_VERSION}-linux-aarch_64.zip"; \
    ;; \
    *) echo >&2 "error: unsupported architecture '$arch' (likely packaging update needed)"; exit 1 ;; \
    esac; \
    env; \
    echo "$url"; \
    wget -O protoc.zip "$url" --progress=dot:giga; \
    unzip -q protoc.zip -d /usr/local/; \
    protoc --version

# protoc-gen-go
RUN go install "google.golang.org/protobuf/cmd/protoc-gen-go@v${GOLANG_PROTOBUF_VERSION}"; \
    protoc-gen-go --version

# mockgen
RUN go install "github.com/golang/mock/mockgen@v${MOCKGEN_VERSION}"; \
    mockgen --version

## Copy code
COPY . $GOPATH/src/github.com/pokt-network/pocket
WORKDIR $GOPATH/src/github.com/pokt-network/pocket

## Run codegen
RUN make protogen_local && \
    make mockgen

RUN go get -d -v ./app/pocket
RUN go build -o /go/bin/pocket ./app/pocket

FROM debian:bullseye

RUN apt-get update -qq && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ca-certificates && \
    rm -rf /var/lib/apt/lists/* /var/cache/apt

COPY --from=builder /go/bin/pocket /usr/local/bin/pocket

CMD ["/usr/local/bin/pocket"]